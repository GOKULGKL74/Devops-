GIT -version control
github - platform [host the proj visible fr otheres nd chnge]

check hidden folder for git
            git init
            ls -a        [a - to see hidden folder]
            ls .git

git init - initialize git repository
git status -untracked files /added edited del
git add . -untracked files added to repo [. all folder ][git add file*  -specific folder]
git commit -m “[descriptive message]” - commit your staged content as a new commit snapshot /msg

git restore --staged filename*  [revert back to untrack]  [init,status,add.   restore*   status]  
git log - to check history    [every commit hav uniq hashID]
git reset #id  -to revert back [if mistakes done]

git stash   //files stored in somewhere but not in git but stored in background ,whenevr we need we can add[add status stash]
git stage pop  // backgrnd data which not commit can revert back
git stage clear  //clear the content which is in background


//projects
      git clone link*
create folder in github -copy link 
git remote add origin github_link*     [remote -handling url,origin -xtension like phnumber]
git push origin main      [main -branch]latest /updated proj 
git branch name*    [for testing/under developmnt] -creation 
git checkout name*  /git checkout main - [name-feature] main now pointing to name*   /pointing to main       
git commit 

      q
      q---main
q-feature
q-feature
      q -(merge)     
      q --main

git merge main /git merge feature  -merge main with feature once code is finalized 
git push rigin main 





