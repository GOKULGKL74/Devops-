IAAS -by Terraform/ CFT 

Terraform:
-write
-plan -b4 execution dry run (test)
-Apply

1.configure aws with cli [aws->security cred ->id]
2.create .tf file
3.run main.tf file  ->creates teraform.tfstate   //tracking

vm.outputfiles  -user to knw which shold be shown on output log(eg:no access o aws how to check ip -by running pipleine /run we will c logs there we  get ip so on..] 
vm.inputfiles- variables
statefile
  always in centralized loacation-s3 -should be read access [bz file stored in gitnub some one clone and proceed chnges and lokks dif in statefile 
github  statefie != our state file not possible so centralised loc
  dont store it in local


....
STEP1: terraform init,plan,deploy,destroy

practise:

user---jenkins(execute the tf) ---github(stored tf file)-aws
                                  |
                                statefile -stored in s3 -dynamo db(locking purpose to avoid conflict/parallel execution)

resources -aws,azurerm,..
Variables: inp,out
  inp -pass info to terraform
  out -console to print 

eg:
variable "instance_type"{
type:string
default:"t2.micro"
}

resource "instance" "ins"{
 instance_type=var.instance_type
}

structure:
variable.tf
provider.tf ....so on

terraform.tfvar  ->input dynamically

