 s3
  obj based storage 
  store static files -audio,video,.. 
  
IAM  
  Authentication- enter ofc
  Authorisation - enter server room 
.
 user ,policy,groups
  User -attach policy 
  grps -if have many people
  Roles -specific/grant permission to service,contact 2 aws account,users..

VPC: -secure isolated cloud in public netwrk

  ISOLATED VIRTUAL NETWRK

  app -nat gateway(to access internt) -internet

user -->internet gateway --->public subnet(accs to all private subnet) -->LB | -->route table -->private subnet -->security grp | -->app

 nacl -netrk access control list -security at subnet lvl
  firewall which control inbound outbound yraffic  -from subnet to internet
  masking the subnet ip address (either routing /lb ip)

-->vpc have 2 region 2 public subnet 2 private subnet
  ip  ->internet gateway -->public subnet(NAT/ALB) -->private subnet (via route table)

Nat gateway 
  one way netwrk from ec2 to internet (instal package)
  translate private vm ip address in private subnet  to public ddress
  it allows internet access within private subnet 

security grp vs NACL
 sec grp - serve as in instance level
 Nacl -security at subnet lvl 

security grp   default : alllow all outbound allow expect port 25(mail) |  inbount:deny 
       y not port 25- bz of spam 
 inbound -user to ap
 outbound  -ap to internt/othr app

CLI: commnd line interfce
  aws UI / CLI (IAAS)/
 CLI- automation eg:10vpc creation ..... need python 
      using API can create/update /delte in aws
      tools to automation:Amazon CLI ,Teraform,cloud formation for AWS 
CLI -simple task like ls ,create ..    teraform.cloud formation -complicated task like create vpc...
terraform- IAAS where ansible configure 

CFT: Cloud formation template*
  CFT -supports YAML,JSON  ->aws api call->aws
  Principles: Declarative(template , version (git)
  CFT Has dedect Drift option -if some one chnge code- we can track altered section 
  syntx:
    verison
    description:
    metadata - author,proj name
    paramtre -
    rules
    mapping
    conditions
    resourse -mandatry
  imp*** useful plugins bunch of req 
      --->YAML
      --->AWS Toolkit

CI/CD
  dont use root account use IAM account
  AWS own set of CI/CD 
    [1-code(github)- webhooks trigger it reach 2.jenkins 3.build process strted (testing )-final product at docker-deploy on EC2)
        code commit(version control git)- Host -private 
              we can use editor /aws UI -in UI we can only upload /edit one file at time so use Terminal**
        code pipeline(jenkins pipleline)- Archestrator
        code build(maven)-docker 
        code deploy(argo cd/shell script)
private: github private/gitlab server instal in lap/aws code commit
  1. code commit:
    managed aws services

  disadvntge:
   restricted
   less intragaration with service outside aws eg:git - if u click . visual studio open ,codepilot so on..
    UI -not great

THEORY:

  code commit(git) -trigger aws code pipeline (1)-invokes CI nd Invokes CD
                                        CI- aws code build -build ,code scan,build img,img scan,img push ....
                                        CD -aws code deploy- k8s ,ec2

cloud watch
EC2 -Virtual compute/server

aws lambda  -compute(EC2)/serverless
  depend upon req-automaically create compute and scale up /down
  serverless - create server nd proceed nd vanish   
    eg:paymnt option -create infrasture -process nd vanish 
  we dont knw where hosted,auto scale, no ip address 
  event driven eg:run ths job at 10am everyday -cludwatch 
               eg:if any storage resticted by cmpy gp3 -if wrkedn configured gp3 -sent an  notification
  for trigger by default: lambda_handler(like main function) going to trigger by automatic if extra function added need to include inside lamda handler function
cost optiminzation-stale resources either delete /notify using cloudwatch
  event driven -drive event automatic (create cron job that will run at 1 am) not by manual

  projects:
   create lambda function (python) -this code talk to aws api (help of boto3) and depends on result perform action like CRUD
   default exexution time - 3 sec for lamda (as smal as possible -it was paramater so it cost)
    if no need to ddlete snapshot store ij aws us eaws glacier (cheap)
        

y lambda?
  cost optmization,
  security 

cloud front
  CDN - content delivery netwrk -create copy on edge loc(cached) -for easy access/reduce latency
      no need to go for central loc 
  req through routers

ECR -Aws servce for store nd manage containers -aws own container archestry 
  Elastic Container Registry -private repo
  it has IAM so extra security 
  

k8s -open source -popular -heavy architect
  COE -auto healing via controler (up down),auto scale via harizontal pod scale
  if need aditional features -k8s hav option to extend but not ECR (crd)-by build own controler nd extend k8s
  popular -community support-open source -upto date 

docker drawbacks:
  if server dowm again comeup ip addres chnge 
  no auto scle,auto heal

ECS -Elastic container  servce -simple arch  -alternative for kubernetes
    
    Auto healing (up down),auto scaling (if trafic it multiple)
    structure: while creating cluster -2 option 
    1.fargate -no need to manage (serverless like lambda)-to run container [lamda for smal nd quik action]
    2.ec2
    task definition -container looks like 
    add service like lb,ingress..

  demo:
    ->1.create ecr nd push img in ECR 
    ->create cluster
    ->two option either fargate/ec2  to run conatainer 
    ->task.yml ->task definition (detail)-create task which need to run in conatiner 
    ->create service to attach load balancer...so on 


Eks -amazon k8s -managed k8s obj by aws -popular 
[node
    control plane -wrker node ...>aws can tk care of control plane 
        ETCD (Recover)-like replicas,dep specs..
        scheduler-newly created pod asign to node based on availability
        controler manager- current state =actual state 
        aws cloud manager - feature that r not in aws by add and configure -eks with load balancer
        API server - interact with above components - auth nd athen 
    high available k8s cluster:
       3 master 3 slave 
      master-schdlr,cloud c manger,etcd,api server gateway   via kube-adm/ kops in master node 
      slave -container netwrk interfce,container runtime, dns,kube proxy (apps we instal in slave)

     y no kops?
      need to managed -etcd crashed,certificate renew,schedule not wrking,server down -all need to chck by manual for 1 cluster  if 100 cluster?
   so EKS comes to picture -Managed control plane 
    -->if we create  EKS - we get highly available cluster with control plne components*
    -->For data plane/wrker node- 2 options -either we can create EC2 0r Fargate (serverless compute)
              eks with fargate -robust higly stable cluster
              ec2-config autoscaling,moitoring ..need to take care by us
     if we create pod(lowest )-will get cluster IP
     Y SERVICE? how to access that app 
    ->note: service: node port -person who hav access to master node ip can access the app
                     clsuter port (default) -access via wrker /master node
                     load balance mode -pblic -elastic IP  -costly    so ingress better option 
            all under VPC -vpc hv public /private subnet (app in private subnet)
                   public - need LB / if private 

         what is ingress  eg :nginx  -ingress.yml`
               /abc goes->forward the req to servce->servce to  /abc pod  -like neeed to configure via kubectl 
                outside user can not access anything inside bz it is in private vpc    (private vpc we plce app)
                in public subnet plce LB that LB can access ingress via ingress controler
                user talk to ALB -alb goes to ingres servce (/abc) 

practise
kubectl -interact with k8s cluster (kubectl needs kube config file  )
eksctl -
aws cli- aws configure ,id ..
Can integrate any identity provider- LDAP ,okta,keycloak

   1. ingress -alb 
      / go to ->service :service-2048
   2.service 
       name:service-2048
       selector - app-2048 ,target port :80
  3.deploymnet:
       lables nd container - port:80
       image 
  4.create  ingres controler for  2048 and it wil configure  lb [after creating ingress controler we get address]
    if alb we need pre-req which is IAM OIDC Connector(auth) -for access other aws servce -via eksctl
    create alb ingress controller nd create iam policy (give access) 
         by curl cmd   and create the policy (documentation)and create service acc with attach role 
  use helm for install load balancer controller 

secret mnager:
 secret manager -highly secure -high cost 
  rotation option with lammda 
 system manager- docker user name ,docker registry url (less secure)   -use combination of secret nd system manager to reduce cost
 hashi-corp vault - moving frm aws to azre....migration diffuclt -  ///multi cloud its useful(centralized soln)
  -dedicted secret manager solution -opensource 
  centralization 
  encryption feature //community driven



cloud migration: 7 stages    =7 R s
  preparation -one time activity
  planning  -one time ativty
  migrate -multiple phases depends on  how many  microservice
  monitr -
  optimize -one time activity
 strategies : these 7 falls under prepare nd planning
  Rehost -POPUPAR ND SIMPLE- 
          lift nd shift -if no dependiencies on ENVIRONMENT* (software ,hardware)
  Reflatform
  Repurchase
  Refactor/re-architcture
          when convert from monolithic to cloud 
  Relocate
  Retire -no longer use just retire
  Retain  -least used

  retire nd retain -not in cloud migration but its decision this app need r not

STEP1: change from monolithic to microservice architecture
  
